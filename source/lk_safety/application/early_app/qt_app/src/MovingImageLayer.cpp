// This code is auto-generated by Qul's qmltocpp tool from the file 'MovingImageLayer.qml'
// WARNING! All changes made in this file will be lost!
#include "MovingImageLayer.h"
#include <qul/private/graphicsdevice.h>


namespace {
struct TranslationIndexBindingFunctor {
   int operator()() const {
       Qul::Private::String id = Qul::Private::Builtins::GlobalQtObject::uiLanguage.value();
       if (id == Qul::Private::Latin1String("", 0)) return 0;
       return 0;
   }
};
static Qul::Private::Binding<int, TranslationIndexBindingFunctor, 0> translationIndexBinding((TranslationIndexBindingFunctor()), Qul::Private::BindingFunctorNoParameters());
static Qul::Property<int> translationIndex(&translationIndexBinding);
}



void MovingImageLayer::_onTChanged_bindingFunctor::operator()() const
{
    int r2__x;
    bool r2_3;
    QUL_DECL_UNUSED MovingImageLayer * r2;
    QUL_DECL_UNUSED Qul::Private::Items::ItemBase * r2_4;
    Qul::qreal r2__vy;
    int r7__y;
    QUL_DECL_UNUSED MovingImageLayer * r7;
    int r8__y;
    int r9__width;
    QUL_DECL_UNUSED MovingImageLayer * r10;
    // root.x += vx
    // line 42  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    r2 = self;
    r7 = r2;
    r2__x = r2->x.value();
    r8__y = r2__x;
    r2__vy = self->vx.value();
    r2__vy = r8__y + r2__vy;
    r7->x.setValue(int(r2__vy));
    // root.y += vy
    // line 43  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    r2 = self;
    r7 = r2;
    r2__x = r2->y.value();
    r8__y = r2__x;
    r2__vy = self->vy.value();
    r2__vy = r8__y + r2__vy;
    r7->y.setValue(int(r2__vy));
    // if (root.y <= 0 || root.y >= (container.height - root.height))
    // line 44  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    r2 = self;
    r2__x = r2->y.value();
    r7__y = r2__x;
    r2__x = 0;
    r2_3 = r7__y <= r2__x;
    if (r2_3) {
    goto label_0;};
    r2 = self;
    r2__x = r2->y.value();
    r8__y = r2__x;
    r2_4 = self->container.value();
    r2__x = r2_4->height.value();
    r9__width = r2__x;
    r2 = self;
    r2__x = r2->height.value();
    r2__x = r9__width - r2__x;
    r2_3 = r8__y >= r2__x;
    if (!r2_3) {
    goto label_1;};
    {
    }
    label_0:;
    // root.vy = -root.vy
    // line 45  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    r2 = self;
    r10 = r2;
    r2 = self;
    r2__vy = r2->vy.value();
    r2__vy=-r2__vy;
    r10->vy.setValue(r2__vy);
    {
    }
    label_1:;
    // if (root.x <= 0 || root.x >= (container.width - root.width))
    // line 46  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    r2 = self;
    r2__x = r2->x.value();
    r7__y = r2__x;
    r2__x = 0;
    r2_3 = r7__y <= r2__x;
    if (r2_3) {
    goto label_2;};
    r2 = self;
    r2__x = r2->x.value();
    r8__y = r2__x;
    r2_4 = self->container.value();
    r2__x = r2_4->width.value();
    r9__width = r2__x;
    r2 = self;
    r2__x = r2->width.value();
    r2__x = r9__width - r2__x;
    r2_3 = r8__y >= r2__x;
    if (!r2_3) {
    goto label_3;};
    {
    }
    label_2:;
    // root.vx = -root.vx
    // line 47  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    r2 = self;
    r10 = r2;
    r2 = self;
    r2__vy = r2->vx.value();
    r2__vy=-r2__vy;
    r10->vx.setValue(r2__vy);
    {
    }
    label_3:;
    // }
    // line 48  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    return ;
    
}
void MovingImageLayer::ComponentAttachedType_node_onCompleted_bindingFunctor::operator()() const
{
    int r2_1;
    bool r2_4;
    QUL_DECL_UNUSED MovingImageLayer * r2;
    QUL_DECL_UNUSED Qul::Private::Items::ItemBase * r2_5;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r2_2;
    Qul::qreal r2_3;
    QUL_DECL_UNUSED MovingImageLayer * r7_1;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r7_2;
    Qul::qreal r7;
    int r8;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r9;
    Qul::qreal r12;
    QUL_DECL_UNUSED Qul::Private::Builtins::Math * r13_1;
    Qul::qreal r13;
    int r14__height;
    int r15;
    // root.x = 1 + Math.floor(Math.random() * (container.width - root.width - 2))
    // line 34  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    r2 = self;
    r7_1 = r2;
    r8 = 1;
    r2_2 = &Qul::Private::Builtins::Math ::instance();
    r9 = r2_2;
    r2_2 = &Qul::Private::Builtins::Math ::instance();
    r13_1 = r2_2;
    r2_3 = r13_1->random();
    r13 = r2_3;
    r2_5 = self->container.value();
    r2_1 = r2_5->width.value();
    r14__height = r2_1;
    r2 = self;
    r2_1 = r2->width.value();
    r2_1 = r14__height - r2_1;
    r15 = r2_1;
    r2_1 = 2;
    r2_1 = r15 - r2_1;
    r2_3 = r13 * r2_1;
    r12 = r2_3;
    r2_1 = r9->floor(r12);
    r2_1 = r8 + r2_1;
    r7_1->x.setValue(r2_1);
    /*
    root.y = 1 + Math.floor(Math.random() * (container.height - root.height - 2))
    
    */
    // line 35  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    r2 = self;
    r7_1 = r2;
    r8 = 1;
    r2_2 = &Qul::Private::Builtins::Math ::instance();
    r9 = r2_2;
    r2_2 = &Qul::Private::Builtins::Math ::instance();
    r13_1 = r2_2;
    r2_3 = r13_1->random();
    r13 = r2_3;
    r2_5 = self->container.value();
    r2_1 = r2_5->height.value();
    r14__height = r2_1;
    r2 = self;
    r2_1 = r2->height.value();
    r2_1 = r14__height - r2_1;
    r15 = r2_1;
    r2_1 = 2;
    r2_1 = r15 - r2_1;
    r2_3 = r13 * r2_1;
    r12 = r2_3;
    r2_1 = r9->floor(r12);
    r2_1 = r8 + r2_1;
    r7_1->y.setValue(r2_1);
    // vx = Math.random() > 0.5 ? 2 : -2
    // line 37  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    r2_2 = &Qul::Private::Builtins::Math ::instance();
    r7_2 = r2_2;
    r2_3 = r7_2->random();
    r7 = r2_3;
    r2_3 = 0.50000000000000000;
    r2_4 = r7 > r2_3;
    if (!r2_4) goto label_0;;
    r2_1 = 2;
    goto label_1;;
    label_0:;
    r2_1 = -2;
    label_1:;
    self->vx.setValue(r2_1);
    // vy = Math.random() > 0.5 ? 2 : -2
    // line 38  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    r2_2 = &Qul::Private::Builtins::Math ::instance();
    r7_2 = r2_2;
    r2_3 = r7_2->random();
    r7 = r2_3;
    r2_3 = 0.50000000000000000;
    r2_4 = r7 > r2_3;
    if (!r2_4) goto label_2;;
    r2_1 = 2;
    goto label_3;;
    label_2:;
    r2_1 = -2;
    label_3:;
    self->vy.setValue(r2_1);
    // }
    // line 39  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    return ;
    
}

MovingImageLayer::MovingImageLayer()

    : Qul::Private::Items::ItemBase ::ExtraStorage_itemExtraProperties<Qul::Private::Items::ImageLayer  >(this)
    , _onTChanged_binding(_onTChanged_bindingFunctor(this), &t)
    , ComponentAttachedType_node_onCompleted_binding(this, ComponentAttachedType_node_onCompleted_binding_slot, &ComponentAttachedType_node.completed)
{
    // to: 1
    // line 55  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    numberanimation.to.setValue(1);
    // from: 0
    // line 54  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    numberanimation.from.setValue(0);
    // loops: Animation.Infinite
    // line 53  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    numberanimation.animationExtraProperties->loops.setValue(2147483647);
    // running: true
    // line 52  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    numberanimation.running.setValue(true);
    // property real t: 0
    // line 50  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    t.setValue(0);
    appendChild(this, &ComponentAttachedType_node);
    // property real vy: 0
    // line 29  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    vy.setValue(0);
    // property real vx: 0
    // line 28  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    vx.setValue(0);
    // NumberAnimation on t {
    // line 51  "D:/0_install/Qul1.7/QtMCUs/1.7.0/examples/layers/MovingImageLayer.qml"
    numberanimation.on(&t);
}
