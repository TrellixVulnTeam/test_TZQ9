/********************************************************
 *          Copyright(c) 2019   Semidrive               *
 ********************************************************/

/* Generated by tool. Do not modify manually. */

#ifndef __OSC_24M_REG_H__
#define __OSC_24M_REG_H__

#define OSC_CAL_OFF 0x0U

#define BM_OSC_CAL_OSC_READY    (0x01U << 31U)

#define BM_OSC_CAL_OSC_SRC  (0x01U << 30U)

#define FM_OSC_CAL_OSC_FCAL (0xfffU << 2U)
#define FV_OSC_CAL_OSC_FCAL(v) \
    (((v) << 2U) & FM_OSC_CAL_OSC_FCAL)
#define GFV_OSC_CAL_OSC_FCAL(v) \
    (((v) & FM_OSC_CAL_OSC_FCAL) >> 2U)

#define BM_OSC_CAL_OSC_MODE (0x01U << 1U)

#define BM_OSC_CAL_OSC_EN   (0x01U << 0U)

#define XTAL_CHK_OFF    0xcU

#define FM_XTAL_CHK_LOST_RAT    (0xfU << 27U)
#define FV_XTAL_CHK_LOST_RAT(v) \
    (((v) << 27U) & FM_XTAL_CHK_LOST_RAT)
#define GFV_XTAL_CHK_LOST_RAT(v) \
    (((v) & FM_XTAL_CHK_LOST_RAT) >> 27U)

#define FM_XTAL_CHK_COMP_WIN    (0x3ffU << 17U)
#define FV_XTAL_CHK_COMP_WIN(v) \
    (((v) << 17U) & FM_XTAL_CHK_COMP_WIN)
#define GFV_XTAL_CHK_COMP_WIN(v) \
    (((v) & FM_XTAL_CHK_COMP_WIN) >> 17U)

#define FM_XTAL_CHK_TRIG_BIT    (0x1fU << 12U)
#define FV_XTAL_CHK_TRIG_BIT(v) \
    (((v) << 12U) & FM_XTAL_CHK_TRIG_BIT)
#define GFV_XTAL_CHK_TRIG_BIT(v) \
    (((v) & FM_XTAL_CHK_TRIG_BIT) >> 12U)

#define FM_XTAL_CHK_UNST_THRD   (0x3ffU << 2U)
#define FV_XTAL_CHK_UNST_THRD(v) \
    (((v) << 2U) & FM_XTAL_CHK_UNST_THRD)
#define GFV_XTAL_CHK_UNST_THRD(v) \
    (((v) & FM_XTAL_CHK_UNST_THRD) >> 2U)

#define BM_XTAL_CHK_SOC_TRIG_EN (0x01U << 1U)

#define BM_XTAL_CHK_SAF_TRIG_EN (0x01U << 0U)

#define XTAL_SAF_INT_OFF    0x10U

#define BM_XTAL_SAF_INT_FR_UNST_INT_CLR (0x01U << 8U)

#define BM_XTAL_SAF_INT_TO_LOST_INT_CLR (0x01U << 7U)

#define BM_XTAL_SAF_INT_TO_UNST_INT_CLR (0x01U << 6U)

#define BM_XTAL_SAF_INT_FR_UNST_INT_STATUS  (0x01U << 5U)

#define BM_XTAL_SAF_INT_TO_LOST_INT_STATUS  (0x01U << 4U)

#define BM_XTAL_SAF_INT_TO_UNST_INT_STATUS  (0x01U << 3U)

#define BM_XTAL_SAF_INT_FR_UNST_INT_EN  (0x01U << 2U)

#define BM_XTAL_SAF_INT_TO_LOST_INT_EN  (0x01U << 1U)

#define BM_XTAL_SAF_INT_TO_UNST_INT_EN  (0x01U << 0U)

#define XTAL_SOC_INT_OFF    0x14U

#define BM_XTAL_SOC_INT_FR_UNST_INT_CLR (0x01U << 8U)

#define BM_XTAL_SOC_INT_TO_LOST_INT_CLR (0x01U << 7U)

#define BM_XTAL_SOC_INT_TO_UNST_INT_CLR (0x01U << 6U)

#define BM_XTAL_SOC_INT_FR_UNST_INT_STATUS  (0x01U << 5U)

#define BM_XTAL_SOC_INT_TO_LOST_INT_STATUS  (0x01U << 4U)

#define BM_XTAL_SOC_INT_TO_UNST_INT_STATUS  (0x01U << 3U)

#define BM_XTAL_SOC_INT_FR_UNST_INT_EN  (0x01U << 2U)

#define BM_XTAL_SOC_INT_TO_LOST_INT_EN  (0x01U << 1U)

#define BM_XTAL_SOC_INT_TO_UNST_INT_EN  (0x01U << 0U)

typedef struct {
    volatile U32 osc_cal;  /* offset: 0x0 */
    U8 rsvd0[8];
    volatile U32 xtal_chk;  /* offset: 0xc */
    volatile U32 xtal_saf_int;  /* offset: 0x10 */
    volatile U32 xtal_soc_int;  /* offset: 0x14 */
} osc_24m_t;

#endif  /* __OSC_24M_REG_H__ */